{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///Users/ihababusafa/dev/NIEPD/apps/website/src/contexts/AppContext.tsx"],"sourcesContent":["'use client'\n\nimport { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\n\n// Types\nexport type Language = 'ar' | 'en';\n\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  role: 'student' | 'teacher' | 'admin';\n  preferences: {\n    notifications: boolean;\n    theme: 'light' | 'dark';\n    language: Language;\n  };\n}\n\nexport interface AppState {\n  // Language and Localization\n  currentLang: Language;\n  \n  // User State\n  user: User | null;\n  isAuthenticated: boolean;\n  \n  // UI State\n  isLoading: boolean;\n  error: string | null;\n  notifications: Notification[];\n  \n  // App Preferences\n  theme: 'light' | 'dark';\n  sidebarOpen: boolean;\n  \n  // Data Cache\n  programs: unknown[];\n  news: unknown[];\n  events: unknown[];\n  \n  // Network State\n  isOnline: boolean;\n  lastSync: Date | null;\n}\n\nexport interface Notification {\n  id: string;\n  type: 'success' | 'error' | 'warning' | 'info';\n  title: string;\n  message: string;\n  timestamp: Date;\n  read: boolean;\n  autoHide?: boolean;\n}\n\n// Action Types\nexport type AppAction =\n  | { type: 'SET_LANGUAGE'; payload: Language }\n  | { type: 'SET_USER'; payload: User | null }\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null }\n  | { type: 'ADD_NOTIFICATION'; payload: Omit<Notification, 'id' | 'timestamp'> }\n  | { type: 'REMOVE_NOTIFICATION'; payload: string }\n  | { type: 'MARK_NOTIFICATION_READ'; payload: string }\n  | { type: 'CLEAR_NOTIFICATIONS' }\n  | { type: 'SET_THEME'; payload: 'light' | 'dark' }\n  | { type: 'TOGGLE_SIDEBAR' }\n  | { type: 'SET_PROGRAMS'; payload: unknown[] }\n  | { type: 'SET_NEWS'; payload: unknown[] }\n  | { type: 'SET_EVENTS'; payload: unknown[] }\n  | { type: 'SET_ONLINE_STATUS'; payload: boolean }\n  | { type: 'SET_LAST_SYNC'; payload: Date }\n  | { type: 'RESET_STATE' };\n\n// Initial State\nconst initialState: AppState = {\n  currentLang: 'ar',\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  notifications: [],\n  theme: 'light',\n  sidebarOpen: false,\n  programs: [],\n  news: [],\n  events: [],\n  isOnline: typeof window !== 'undefined' ? navigator.onLine : true,\n  lastSync: null,\n};\n\n// Reducer\nconst appReducer = (state: AppState, action: AppAction): AppState => {\n  switch (action.type) {\n    case 'SET_LANGUAGE':\n      return {\n        ...state,\n        currentLang: action.payload,\n      };\n    \n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: action.payload !== null,\n      };\n    \n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    \n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n      };\n    \n    case 'ADD_NOTIFICATION': {\n      const newNotification: Notification = {\n        ...action.payload,\n        id: Date.now().toString(),\n        timestamp: new Date(),\n        read: false,\n      };\n      return {\n        ...state,\n        notifications: [newNotification, ...state.notifications],\n      };\n    }\n    \n    case 'REMOVE_NOTIFICATION':\n      return {\n        ...state,\n        notifications: state.notifications.filter(n => n.id !== action.payload),\n      };\n    \n    case 'MARK_NOTIFICATION_READ':\n      return {\n        ...state,\n        notifications: state.notifications.map(n =>\n          n.id === action.payload ? { ...n, read: true } : n\n        ),\n      };\n    \n    case 'CLEAR_NOTIFICATIONS':\n      return {\n        ...state,\n        notifications: [],\n      };\n    \n    case 'SET_THEME':\n      return {\n        ...state,\n        theme: action.payload,\n      };\n    \n    case 'TOGGLE_SIDEBAR':\n      return {\n        ...state,\n        sidebarOpen: !state.sidebarOpen,\n      };\n    \n    case 'SET_PROGRAMS':\n      return {\n        ...state,\n        programs: action.payload,\n      };\n    \n    case 'SET_NEWS':\n      return {\n        ...state,\n        news: action.payload,\n      };\n    \n    case 'SET_EVENTS':\n      return {\n        ...state,\n        events: action.payload,\n      };\n    \n    case 'SET_ONLINE_STATUS':\n      return {\n        ...state,\n        isOnline: action.payload,\n      };\n    \n    case 'SET_LAST_SYNC':\n      return {\n        ...state,\n        lastSync: action.payload,\n      };\n    \n    case 'RESET_STATE':\n      return {\n        ...initialState,\n        isOnline: state.isOnline,\n      };\n    \n    default:\n      return state;\n  }\n};\n\n// Context\nconst AppContext = createContext<{\n  state: AppState;\n  dispatch: React.Dispatch<AppAction>;\n} | null>(null);\n\n// Provider Component\nexport const AppProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Load saved preferences on mount\n  useEffect(() => {\n    // Only run on client side\n    if (typeof window !== 'undefined') {\n      const savedLang = localStorage.getItem('niepd-language') as Language;\n      const savedTheme = localStorage.getItem('niepd-theme') as 'light' | 'dark';\n      \n      if (savedLang && (savedLang === 'ar' || savedLang === 'en')) {\n        dispatch({ type: 'SET_LANGUAGE', payload: savedLang });\n      }\n      \n      if (savedTheme && (savedTheme === 'light' || savedTheme === 'dark')) {\n        dispatch({ type: 'SET_THEME', payload: savedTheme });\n      }\n    }\n  }, []);\n\n  // Save language preference\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('niepd-language', state.currentLang);\n      document.documentElement.lang = state.currentLang;\n      document.documentElement.dir = state.currentLang === 'ar' ? 'rtl' : 'ltr';\n    }\n  }, [state.currentLang]);\n\n  // Save theme preference\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('niepd-theme', state.theme);\n      document.documentElement.classList.toggle('dark', state.theme === 'dark');\n    }\n  }, [state.theme]);\n\n  // Online/Offline detection\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const handleOnline = () => dispatch({ type: 'SET_ONLINE_STATUS', payload: true });\n      const handleOffline = () => dispatch({ type: 'SET_ONLINE_STATUS', payload: false });\n\n      window.addEventListener('online', handleOnline);\n      window.addEventListener('offline', handleOffline);\n\n      return () => {\n        window.removeEventListener('online', handleOnline);\n        window.removeEventListener('offline', handleOffline);\n      };\n    }\n  }, []);\n\n  // Auto-hide notifications\n  useEffect(() => {\n    const autoHideNotifications = state.notifications.filter(n => n.autoHide && !n.read);\n    \n    if (autoHideNotifications.length > 0) {\n      const timeouts = autoHideNotifications.map(notification =>\n        setTimeout(() => {\n          dispatch({ type: 'REMOVE_NOTIFICATION', payload: notification.id });\n        }, 5000)\n      );\n\n      return () => {\n        timeouts.forEach(timeout => clearTimeout(timeout));\n      };\n    }\n  }, [state.notifications]);\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n// Custom Hook\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n\n// Convenience Hooks\nexport const useLanguage = () => {\n  const { state, dispatch } = useApp();\n  \n  const setLanguage = (lang: Language) => {\n    dispatch({ type: 'SET_LANGUAGE', payload: lang });\n  };\n  \n  return {\n    currentLang: state.currentLang,\n    setLanguage,\n    isArabic: state.currentLang === 'ar',\n    isEnglish: state.currentLang === 'en',\n  };\n};\n\nexport const useNotifications = () => {\n  const { state, dispatch } = useApp();\n  \n  const addNotification = (notification: Omit<Notification, 'id' | 'timestamp'>) => {\n    dispatch({ type: 'ADD_NOTIFICATION', payload: notification });\n  };\n  \n  const removeNotification = (id: string) => {\n    dispatch({ type: 'REMOVE_NOTIFICATION', payload: id });\n  };\n  \n  const markAsRead = (id: string) => {\n    dispatch({ type: 'MARK_NOTIFICATION_READ', payload: id });\n  };\n  \n  const clearAll = () => {\n    dispatch({ type: 'CLEAR_NOTIFICATIONS' });\n  };\n  \n  return {\n    notifications: state.notifications,\n    unreadCount: state.notifications.filter(n => !n.read).length,\n    addNotification,\n    removeNotification,\n    markAsRead,\n    clearAll,\n  };\n};\n\nexport const useTheme = () => {\n  const { state, dispatch } = useApp();\n  \n  const setTheme = (theme: 'light' | 'dark') => {\n    dispatch({ type: 'SET_THEME', payload: theme });\n  };\n  \n  const toggleTheme = () => {\n    setTheme(state.theme === 'light' ? 'dark' : 'light');\n  };\n  \n  return {\n    theme: state.theme,\n    setTheme,\n    toggleTheme,\n    isDark: state.theme === 'dark',\n  };\n};\n\nexport const useAuth = () => {\n  const { state, dispatch } = useApp();\n  \n  const login = (user: User) => {\n    dispatch({ type: 'SET_USER', payload: user });\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('niepd-user', JSON.stringify(user));\n    }\n  };\n  \n  const logout = () => {\n    dispatch({ type: 'SET_USER', payload: null });\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('niepd-user');\n    }\n  };\n  \n  return {\n    user: state.user,\n    isAuthenticated: state.isAuthenticated,\n    login,\n    logout,\n  };\n};\n\nexport const useLoading = () => {\n  const { state, dispatch } = useApp();\n  \n  const setLoading = (loading: boolean) => {\n    dispatch({ type: 'SET_LOADING', payload: loading });\n  };\n  \n  const setError = (error: string | null) => {\n    dispatch({ type: 'SET_ERROR', payload: error });\n  };\n  \n  return {\n    isLoading: state.isLoading,\n    error: state.error,\n    setLoading,\n    setError,\n  };\n};\n\nexport const useNetworkStatus = () => {\n  const { state } = useApp();\n  \n  return {\n    isOnline: state.isOnline,\n    isOffline: !state.isOnline,\n    lastSync: state.lastSync,\n  };\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAFA;;;AA2EA,gBAAgB;AAChB,MAAM,eAAyB;IAC7B,aAAa;IACb,MAAM;IACN,iBAAiB;IACjB,WAAW;IACX,OAAO;IACP,eAAe,EAAE;IACjB,OAAO;IACP,aAAa;IACb,UAAU,EAAE;IACZ,MAAM,EAAE;IACR,QAAQ,EAAE;IACV,UAAU,sCAAgC,0BAAmB;IAC7D,UAAU;AACZ;AAEA,UAAU;AACV,MAAM,aAAa,CAAC,OAAiB;IACnC,OAAQ,OAAO,IAAI;QACjB,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,aAAa,OAAO,OAAO;YAC7B;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,MAAM,OAAO,OAAO;gBACpB,iBAAiB,OAAO,OAAO,KAAK;YACtC;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,WAAW,OAAO,OAAO;YAC3B;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,OAAO,OAAO,OAAO;gBACrB,WAAW;YACb;QAEF,KAAK;YAAoB;gBACvB,MAAM,kBAAgC;oBACpC,GAAG,OAAO,OAAO;oBACjB,IAAI,KAAK,GAAG,GAAG,QAAQ;oBACvB,WAAW,IAAI;oBACf,MAAM;gBACR;gBACA,OAAO;oBACL,GAAG,KAAK;oBACR,eAAe;wBAAC;2BAAoB,MAAM,aAAa;qBAAC;gBAC1D;YACF;QAEA,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,eAAe,MAAM,aAAa,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,OAAO,OAAO;YACxE;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,eAAe,MAAM,aAAa,CAAC,GAAG,CAAC,CAAA,IACrC,EAAE,EAAE,KAAK,OAAO,OAAO,GAAG;wBAAE,GAAG,CAAC;wBAAE,MAAM;oBAAK,IAAI;YAErD;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,eAAe,EAAE;YACnB;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,OAAO,OAAO,OAAO;YACvB;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,aAAa,CAAC,MAAM,WAAW;YACjC;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,UAAU,OAAO,OAAO;YAC1B;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,MAAM,OAAO,OAAO;YACtB;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,QAAQ,OAAO,OAAO;YACxB;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,UAAU,OAAO,OAAO;YAC1B;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,KAAK;gBACR,UAAU,OAAO,OAAO;YAC1B;QAEF,KAAK;YACH,OAAO;gBACL,GAAG,YAAY;gBACf,UAAU,MAAM,QAAQ;YAC1B;QAEF;YACE,OAAO;IACX;AACF;AAEA,UAAU;AACV,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAGrB;AAGH,MAAM,cAAiD,CAAC,EAAE,QAAQ,EAAE;IACzE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,YAAY;IAEjD,kCAAkC;IAClC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,0BAA0B;QAC1B;;IAYF,GAAG,EAAE;IAEL,2BAA2B;IAC3B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;;IAKF,GAAG;QAAC,MAAM,WAAW;KAAC;IAEtB,wBAAwB;IACxB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;;IAIF,GAAG;QAAC,MAAM,KAAK;KAAC;IAEhB,2BAA2B;IAC3B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;;IAYF,GAAG,EAAE;IAEL,0BAA0B;IAC1B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,wBAAwB,MAAM,aAAa,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,QAAQ,IAAI,CAAC,EAAE,IAAI;QAEnF,IAAI,sBAAsB,MAAM,GAAG,GAAG;YACpC,MAAM,WAAW,sBAAsB,GAAG,CAAC,CAAA,eACzC,WAAW;oBACT,SAAS;wBAAE,MAAM;wBAAuB,SAAS,aAAa,EAAE;oBAAC;gBACnE,GAAG;YAGL,OAAO;gBACL,SAAS,OAAO,CAAC,CAAA,UAAW,aAAa;YAC3C;QACF;IACF,GAAG;QAAC,MAAM,aAAa;KAAC;IAExB,qBACE,8OAAC,WAAW,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAS;kBAC3C;;;;;;AAGP;AAGO,MAAM,SAAS;IACpB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAGO,MAAM,cAAc;IACzB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;IAE5B,MAAM,cAAc,CAAC;QACnB,SAAS;YAAE,MAAM;YAAgB,SAAS;QAAK;IACjD;IAEA,OAAO;QACL,aAAa,MAAM,WAAW;QAC9B;QACA,UAAU,MAAM,WAAW,KAAK;QAChC,WAAW,MAAM,WAAW,KAAK;IACnC;AACF;AAEO,MAAM,mBAAmB;IAC9B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;IAE5B,MAAM,kBAAkB,CAAC;QACvB,SAAS;YAAE,MAAM;YAAoB,SAAS;QAAa;IAC7D;IAEA,MAAM,qBAAqB,CAAC;QAC1B,SAAS;YAAE,MAAM;YAAuB,SAAS;QAAG;IACtD;IAEA,MAAM,aAAa,CAAC;QAClB,SAAS;YAAE,MAAM;YAA0B,SAAS;QAAG;IACzD;IAEA,MAAM,WAAW;QACf,SAAS;YAAE,MAAM;QAAsB;IACzC;IAEA,OAAO;QACL,eAAe,MAAM,aAAa;QAClC,aAAa,MAAM,aAAa,CAAC,MAAM,CAAC,CAAA,IAAK,CAAC,EAAE,IAAI,EAAE,MAAM;QAC5D;QACA;QACA;QACA;IACF;AACF;AAEO,MAAM,WAAW;IACtB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;IAE5B,MAAM,WAAW,CAAC;QAChB,SAAS;YAAE,MAAM;YAAa,SAAS;QAAM;IAC/C;IAEA,MAAM,cAAc;QAClB,SAAS,MAAM,KAAK,KAAK,UAAU,SAAS;IAC9C;IAEA,OAAO;QACL,OAAO,MAAM,KAAK;QAClB;QACA;QACA,QAAQ,MAAM,KAAK,KAAK;IAC1B;AACF;AAEO,MAAM,UAAU;IACrB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;IAE5B,MAAM,QAAQ,CAAC;QACb,SAAS;YAAE,MAAM;YAAY,SAAS;QAAK;QAC3C;;IAGF;IAEA,MAAM,SAAS;QACb,SAAS;YAAE,MAAM;YAAY,SAAS;QAAK;QAC3C;;IAGF;IAEA,OAAO;QACL,MAAM,MAAM,IAAI;QAChB,iBAAiB,MAAM,eAAe;QACtC;QACA;IACF;AACF;AAEO,MAAM,aAAa;IACxB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;IAE5B,MAAM,aAAa,CAAC;QAClB,SAAS;YAAE,MAAM;YAAe,SAAS;QAAQ;IACnD;IAEA,MAAM,WAAW,CAAC;QAChB,SAAS;YAAE,MAAM;YAAa,SAAS;QAAM;IAC/C;IAEA,OAAO;QACL,WAAW,MAAM,SAAS;QAC1B,OAAO,MAAM,KAAK;QAClB;QACA;IACF;AACF;AAEO,MAAM,mBAAmB;IAC9B,MAAM,EAAE,KAAK,EAAE,GAAG;IAElB,OAAO;QACL,UAAU,MAAM,QAAQ;QACxB,WAAW,CAAC,MAAM,QAAQ;QAC1B,UAAU,MAAM,QAAQ;IAC1B;AACF","debugId":null}}]
}